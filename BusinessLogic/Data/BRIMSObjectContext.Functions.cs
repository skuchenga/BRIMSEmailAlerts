//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;


using BRIMS.EmailAlerts.BusinessLogic.Alerts.BankExposures;
using BRIMS.EmailAlerts.BusinessLogic.Alerts.BrokerExposureAlerts;
using BRIMS.EmailAlerts.BusinessLogic.Alerts.RBALimitAlerts;
using BRIMS.EmailAlerts.BusinessLogic.Alerts.TransactionEmailAlerts;
using BRIMS.EmailAlerts.BusinessLogic.Alerts.UmbrellaAlerts;
using BRIMS.EmailAlerts.BusinessLogic.Configuration;
using BRIMS.EmailAlerts.BusinessLogic.Email;
using BRIMS.EmailAlerts.BusinessLogic.System;



namespace BRIMS.EmailAlerts.BusinessLogic.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BRIMSObjectContext : ObjectContext
    {
    
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public ObjectResult<RBAMailAlert> Proc_MailAlerts(global::System.String ourBranchID)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RBAMailAlert>("Proc_MailAlerts", ourBranchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public ObjectResult<BankExposureMailAlert> proc_bankexposuremailalerts(global::System.String ourBranchID)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BankExposureMailAlert>("proc_bankexposuremailalerts", ourBranchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public ObjectResult<BrokerExposureMailAlert> proc_brokerexposuremailalerts(global::System.String ourBranchID)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BrokerExposureMailAlert>("proc_brokerexposuremailalerts", ourBranchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<BRIMSMail> sp_GetEmailRecipient()
        {
            return base.ExecuteFunction<BRIMSMail>("sp_GetEmailRecipient");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="item">No Metadata Documentation available.</param>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public int sp_UpdateSentEmailAlert(Nullable<global::System.Int64> iD, global::System.String item, global::System.String ourBranchID)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int64));
            }
    
            ObjectParameter itemParameter;
            if (item != null)
            {
                itemParameter = new ObjectParameter("Item", item);
            }
            else
            {
                itemParameter = new ObjectParameter("Item", typeof(global::System.String));
            }
    
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_UpdateSentEmailAlert", iDParameter, itemParameter, ourBranchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public ObjectResult<tSystem> proc_GetSystem_MailAlerts(global::System.String ourBranchID)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<tSystem>("proc_GetSystem_MailAlerts", ourBranchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="tranIDS">No Metadata Documentation available.</param>
        public int proc_UpdateUTTrxEmailSent(global::System.String tranIDS)
        {
            ObjectParameter tranIDSParameter;
            if (tranIDS != null)
            {
                tranIDSParameter = new ObjectParameter("TranIDS", tranIDS);
            }
            else
            {
                tranIDSParameter = new ObjectParameter("TranIDS", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("proc_UpdateUTTrxEmailSent", tranIDSParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public ObjectResult<TransactionEmailAlert> proc_UTTrxEmailAlerts(global::System.String ourBranchID)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<TransactionEmailAlert>("proc_UTTrxEmailAlerts", ourBranchIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        /// <param name="fromDate">No Metadata Documentation available.</param>
        /// <param name="toDate">No Metadata Documentation available.</param>
        public int rpt_BrokerExposureAlerts(global::System.String ourBranchID, Nullable<global::System.DateTime> fromDate, Nullable<global::System.DateTime> toDate)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            ObjectParameter fromDateParameter;
            if (fromDate.HasValue)
            {
                fromDateParameter = new ObjectParameter("FromDate", fromDate);
            }
            else
            {
                fromDateParameter = new ObjectParameter("FromDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter toDateParameter;
            if (toDate.HasValue)
            {
                toDateParameter = new ObjectParameter("ToDate", toDate);
            }
            else
            {
                toDateParameter = new ObjectParameter("ToDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("rpt_BrokerExposureAlerts", ourBranchIDParameter, fromDateParameter, toDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ourBranchID">No Metadata Documentation available.</param>
        public ObjectResult<UmbrellaEmailAlert> proc_UmbrellaAlerts(global::System.String ourBranchID)
        {
            ObjectParameter ourBranchIDParameter;
            if (ourBranchID != null)
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", ourBranchID);
            }
            else
            {
                ourBranchIDParameter = new ObjectParameter("OurBranchID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<UmbrellaEmailAlert>("proc_UmbrellaAlerts", ourBranchIDParameter);
        }

        #endregion

    }
    

    #endregion

    
    
}
